#!/bin/bash
#
# Installation script for Bluetooth Apple Fix
# Version: 1.1.0
# Created: April 10, 2025
#
# This script installs the Bluetooth Apple Fix components

# ANSI color codes for better readability
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# Log function
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Success function
success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# Warning function
warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Error function
error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

# Function to create backups of existing files
backup_file() {
    local file="$1"
    if [ -f "$file" ]; then
        local backup="${file}.bak.$(date +%Y%m%d%H%M%S)"
        log "Creating backup of $file to $backup"
        cp "$file" "$backup" || {
            error "Failed to create backup of $file"
            return 1
        }
        success "Backup created: $backup"
    fi
    return 0
}

# Check for root privileges
if [ "$(id -u)" -ne 0 ]; then
    error "This script must be run as root"
    echo "Please run with: sudo $0"
    exit 1
fi

# Display header
echo -e "${BOLD}=========================================${NC}"
echo -e "${BOLD}   Bluetooth Apple Fix Installer         ${NC}"
echo -e "${BOLD}   Version 1.1.0                         ${NC}"
echo -e "${BOLD}=========================================${NC}"
echo

# Create necessary directories
log "Creating required directories..."
mkdir -p /usr/local/bin
mkdir -p /etc/bluetooth-monitor
mkdir -p /var/log/bluetooth-monitor

# Install Bluetooth Monitor script
log "Installing Bluetooth Monitor script..."
backup_file "/usr/local/bin/bluetooth_monitor.sh"
cp src/bluetooth_monitor.sh /usr/local/bin/ || {
    error "Failed to copy bluetooth_monitor.sh"
    exit 1
}
chmod 755 /usr/local/bin/bluetooth_monitor.sh || {
    error "Failed to set permissions on bluetooth_monitor.sh"
    exit 1
}
success "Installed Bluetooth Monitor script to /usr/local/bin/"

# Install udev rules
log "Installing udev rules..."
backup_file "/etc/udev/rules.d/99-bluetooth-apple.rules"
cp config/udev/99-bluetooth-apple.rules /etc/udev/rules.d/ || {
    error "Failed to copy udev rules"
    exit 1
}
chmod 644 /etc/udev/rules.d/99-bluetooth-apple.rules || {
    error "Failed to set permissions on udev rules"
    exit 1
}
log "Reloading udev rules..."
udevadm control --reload-rules || {
    warning "Failed to reload udev rules, you may need to reboot"
}
success "Installed udev rules to /etc/udev/rules.d/"

# Install systemd service
log "Installing systemd service..."
backup_file "/etc/systemd/system/bluetooth-monitor.service"
cp config/systemd/bluetooth-monitor.service /etc/systemd/system/ || {
    error "Failed to copy systemd service file"
    exit 1
}
chmod 644 /etc/systemd/system/bluetooth-monitor.service || {
    error "Failed to set permissions on systemd service file"
    exit 1
}
log "Reloading systemd daemon configuration..."
systemctl daemon-reload || {
    warning "Failed to reload systemd daemon configuration"
}
success "Installed systemd service to /etc/systemd/system/"

# Install modprobe configuration
log "Installing kernel module parameters..."
mkdir -p /etc/modprobe.d
backup_file "/etc/modprobe.d/bluetooth-apple.conf"
cp config/modprobe.d/bluetooth-apple.conf /etc/modprobe.d/ || {
    error "Failed to copy modprobe configuration"
    exit 1
}
chmod 644 /etc/modprobe.d/bluetooth-apple.conf || {
    error "Failed to set permissions on modprobe configuration"
    exit 1
}

# Update initramfs if available (for modprobe changes)
if command -v update-initramfs >/dev/null; then
    log "Updating initramfs to apply module parameters..."
    update-initramfs -u || {
        warning "Failed to update initramfs, module parameters may not apply until reboot"
    }
elif command -v dracut >/dev/null; then
    log "Updating dracut to apply module parameters..."
    dracut -f || {
        warning "Failed to update dracut, module parameters may not apply until reboot"
    }
else
    warning "Could not update initramfs or dracut, module parameters may not apply until reboot"
fi
success "Installed kernel module parameters to /etc/modprobe.d/"

# Create default config
log "Setting up configuration..."
if [ ! -f /etc/bluetooth-monitor/config ]; then
    cat > /etc/bluetooth-monitor/config <<EOF
# Bluetooth Monitor Configuration
# Generated by installer on $(date)

# Enable verbose logging
VERBOSE=true

# Check interval in seconds
CHECK_INTERVAL=60

# Enable automatic recovery
AUTO_RECOVERY=true

# Log directory
LOG_DIR=/var/log/bluetooth-monitor
EOF
    chmod 644 /etc/bluetooth-monitor/config || {
        error "Failed to set permissions on configuration file"
        exit 1
    }
    success "Created default configuration in /etc/bluetooth-monitor/config"
else
    log "Configuration file already exists, not overwriting"
fi

# Setup log rotation
log "Setting up log rotation..."
backup_file "/etc/logrotate.d/bluetooth-monitor"
cat > /etc/logrotate.d/bluetooth-monitor <<EOF
/var/log/bluetooth-monitor/*.log {
    daily
    rotate 7
    compress
    delaycompress
    missingok
    notifempty
    create 644 root root
}
EOF
chmod 644 /etc/logrotate.d/bluetooth-monitor || {
    error "Failed to set permissions on log rotation configuration"
    exit 1
}
success "Setup log rotation in /etc/logrotate.d/bluetooth-monitor"

# Verify installation
log "Verifying installation..."
VERIFY_FAILED=0

# Check main script
if [ ! -x "/usr/local/bin/bluetooth_monitor.sh" ]; then
    error "Verification failed: Bluetooth Monitor script is not executable"
    VERIFY_FAILED=1
fi

# Check systemd service
if [ ! -f "/etc/systemd/system/bluetooth-monitor.service" ]; then
    error "Verification failed: systemd service file is missing"
    VERIFY_FAILED=1
fi

# Check udev rules
if [ ! -f "/etc/udev/rules.d/99-bluetooth-apple.rules" ]; then
    error "Verification failed: udev rules are missing"
    VERIFY_FAILED=1
fi

# Check modprobe configuration
if [ ! -f "/etc/modprobe.d/bluetooth-apple.conf" ]; then
    error "Verification failed: modprobe configuration is missing"
    VERIFY_FAILED=1
fi

# Final summary
if [ $VERIFY_FAILED -eq 0 ]; then
    echo
    echo -e "${BOLD}${GREEN}Installation completed successfully!${NC}"
    echo
    echo -e "${BOLD}Manage the service with:${NC}"
    echo "  systemctl start bluetooth-monitor     # Start the service"
    echo "  systemctl enable bluetooth-monitor    # Enable at boot"
    echo "  systemctl status bluetooth-monitor    # Check status"
    echo
    echo -e "${BOLD}Configuration files:${NC}"
    echo "  /etc/bluetooth-monitor/config         # Main configuration"
    echo "  /etc/modprobe.d/bluetooth-apple.conf  # Kernel module parameters"
    echo "  /etc/udev/rules.d/99-bluetooth-apple.rules # USB device rules"
    echo
    echo -e "${BOLD}Note:${NC} Some changes require a system reboot to take full effect"
    echo "      especially kernel module parameters."
    echo
else
    echo
    echo -e "${BOLD}${RED}Installation completed with errors.${NC}"
    echo "Please check the error messages above."
    echo
    exit 1
fi
